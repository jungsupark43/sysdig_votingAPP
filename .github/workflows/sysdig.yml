name: Sysdig CLI Scanner on PR

on:
  pull_request:
    types: [opened, reopened, synchronize]
    branches: [main, master]

jobs:
  sysdig-cli-scan:
    runs-on: ubuntu-latest
    env:
      SYSDIG_SECURE_URL: https://app.au1.sysdig.com/ # 리전에 맞게 변경
      SECURE_API_TOKEN: ${{ secrets.SECURE_API_TOKEN }}
      IMAGE_NAME: pr-scan:${{ github.event.number }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image for scan (local)
        run: |
          docker build -t "$IMAGE_NAME" .
        continue-on-error: true # 빌드 실패 시에도 이후 단계 진행

      - name: Download sysdig-cli-scanner
        run: |
          mkdir -p $GITHUB_WORKSPACE/bin
          curl -L -s https://download.sysdig.com/scanning/sysdig-cli-scanner/latest_version.txt -o latest_version.txt
          VER=$(cat latest_version.txt)
          curl -L -o $GITHUB_WORKSPACE/bin/sysdig-cli-scanner \
            "https://download.sysdig.com/scanning/bin/sysdig-cli-scanner/${VER}/linux/amd64/sysdig-cli-scanner"
          chmod +x $GITHUB_WORKSPACE/bin/sysdig-cli-scanner
        continue-on-error: false # 필수 단계

      - name: Prepare cache folders
        run: |
          mkdir -p $GITHUB_WORKSPACE/cache/db
          mkdir -p $GITHUB_WORKSPACE/cache/scanner-cache

      - name: Scan container image (do not block PR)
        run: |
          set -e
          if docker image inspect "$IMAGE_NAME" > /dev/null 2>&1; then
            $GITHUB_WORKSPACE/bin/sysdig-cli-scanner \
              --apiurl "${SYSDIG_SECURE_URL}" \
              --dbpath="${GITHUB_WORKSPACE}/cache/db" \
              --cachepath="${GITHUB_WORKSPACE}/cache/scanner-cache" \
              docker://$IMAGE_NAME || true
          else
            echo "Image $IMAGE_NAME not found, skipping image scan."
          fi
        continue-on-error: true

      - name: Scan IaC directory (Kubernetes manifests only)
        run: |
          $GITHUB_WORKSPACE/bin/sysdig-cli-scanner \
            --iac -r --list-unsupported-resources \
            --apiurl "${SYSDIG_SECURE_URL}" \
            ./k8s
        continue-on-error: true # 오류 발생해도 PR 차단 안 함

      - name: Upload SARIF (if generated)
        if: success() || failure()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ github.workspace }}/sarif.json
        continue-on-error: true

